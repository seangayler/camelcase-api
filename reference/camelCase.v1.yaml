openapi: 3.0.0
info:
  title: camelCase
  version: '1.0'
  contact:
    name: Sean Gayler
    email: scianciogayl@student.unimelb.edu.au
  description: API for camelCase
servers:
  - url: 'http://localhost:5000'
paths:
  'api/profile/{userID}':
    parameters:
      - schema:
          type: number
        name: userID
        in: path
        required: true
        description: ID of user in profile database table
    get:
      summary: Get profile information of a user
      tags: []
      responses:
        '200':
          description: The requested profile is public. Retrieves full profile information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: success
                  data:
                    type: object
                    required:
                      - firstName
                      - lastName
                      - bio
                      - location
                      - lookingForWork
                      - public
                      - gender
                      - DOB
                    properties:
                      firstName:
                        type: string
                      lastName:
                        type: string
                      bio:
                        type: string
                      location:
                        type: string
                      lookingForWork:
                        type: boolean
                      public:
                        type: boolean
                      gender:
                        type: string
                        enum:
                          - male
                          - female
                          - other
                      DOB:
                        type: string
                        format: date
                required:
                  - status
                  - data
        '401':
          description: The requested profile is private. Retrieves limited profile information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: success
                  data:
                    type: object
                    required:
                      - firstName
                      - lastName
                      - public
                    properties:
                      firstName:
                        type: string
                      lastName:
                        type: string
                      public:
                        type: boolean
                required:
                  - status
                  - data
            application/xml:
              schema:
                type: object
                properties: {}
        '404':
          description: Profile not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: error
                  message:
                    type: string
                    default: Profile not found.
                required:
                  - status
                  - message
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: error
                  message:
                    type: string
                required:
                  - status
                  - message
      operationId: get-profile-userID
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/xml:
            schema: {}
            examples:
              example-1:
                value: {}
        description: ''
      description: 'Get a profile specified by userID route parameter. Use this endpoint if retrieving a profile that does not belong to you, or if you are unauthenticated.'
  api/profile:
    post:
      summary: 'Add, update or delete a profile'
      tags: []
      responses:
        '200':
          description: Profile successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: success
                required:
                  - status
        '403':
          description: Profile already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: error
                  message:
                    type: string
                    default: Profile already exists.
                required:
                  - status
                  - message
        '422':
          description: Something is wrong with the submitted data (fails validation).
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: fail
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                          example: arithmagender
                        msg:
                          type: string
                          example: Invalid value
                        param:
                          type: string
                          example: data.gender
                        location:
                          type: string
                          example: body
                      required:
                        - value
                        - msg
                        - param
                        - location
                required:
                  - status
        '500':
          description: Internal Server Error
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: error
                  message:
                    type: string
                required:
                  - status
                  - message
      operationId: post-profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  required:
                    - firstName
                    - lastName
                    - public
                    - lookingForWork
                    - gender
                  properties:
                    firstName:
                      type: string
                    lastName:
                      type: string
                    bio:
                      type: string
                    location:
                      type: string
                    public:
                      type: boolean
                    lookingForWork:
                      type: boolean
                    gender:
                      type: string
                      enum:
                        - male
                        - female
                        - other
                    DOB:
                      type: string
                      format: date
              required:
                - data
      description: Add your profile to the database. You must be authenticated to use this endpoint.
    put:
      summary: ''
      operationId: put-profile
      responses:
        '200':
          description: Profile successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: success
                required:
                  - status
        '404':
          description: Profile does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: error
                  message:
                    type: string
                    default: Profile does not exist.
                required:
                  - status
                  - message
        '422':
          description: Something is wrong with the submitted data (fails validation).
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: fail
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                          example: arithmagender
                        msg:
                          type: string
                          example: Invalid value
                        param:
                          type: string
                          example: data.gender
                        location:
                          type: string
                          example: body
                      required:
                        - value
                        - msg
                        - param
                        - location
                required:
                  - status
                  - data
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: error
                  messsage:
                    type: string
                required:
                  - status
                  - messsage
      description: Updates your existing profile. You must be authenticated to use this endpoint.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  required:
                    - firstName
                    - lastName
                    - public
                    - lookingForWork
                    - gender
                  properties:
                    firstName:
                      type: string
                    lastName:
                      type: string
                    bio:
                      type: string
                    location:
                      type: string
                    public:
                      type: boolean
                    lookingForWork:
                      type: boolean
                    gender:
                      type: string
                    DOB:
                      type: string
              required:
                - data
          application/xml:
            schema: {}
    delete:
      summary: ''
      operationId: delete-profile
      responses:
        '200':
          description: Profile successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: success
                required:
                  - status
        '404':
          description: Profile does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: error
                  message:
                    type: string
                    default: Profile does not exist.
                required:
                  - status
                  - message
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: error
                  message:
                    type: string
                required:
                  - status
                  - message
      description: Deletes your profile. You must be authenticated.
    parameters: []
  /api/profile/getOwnProfile:
    get:
      summary: Get your own profile
      tags: []
      responses:
        '200':
          description: Profile information successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: success
                  data:
                    type: object
                    required:
                      - firstName
                      - lastName
                      - lookingForWork
                      - public
                      - gender
                    properties:
                      firstName:
                        type: string
                      lastName:
                        type: string
                      bio:
                        type: string
                      location:
                        type: string
                      lookingForWork:
                        type: boolean
                      public:
                        type: boolean
                      gender:
                        type: string
                      DOB:
                        type: string
                        format: date
                required:
                  - status
                  - data
        '404':
          description: Profile not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: error
                  message:
                    type: string
                    default: Profile not found.
                required:
                  - status
                  - message
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: error
                  message:
                    type: string
                required:
                  - status
                  - message
      operationId: get-api-profile-getOwnProfile
      description: Retrieves your own (full) profile information. You must be authenticated to use this endpoint.
  '/api/experience/{userID}':
    parameters:
      - schema:
          type: string
        name: userID
        in: path
        required: true
    get:
      summary: Get all experiences of a user
      tags: []
      responses:
        '200':
          description: OK
        '201':
          description: Created
      operationId: get-api-experience-userID
components:
  schemas: {}
